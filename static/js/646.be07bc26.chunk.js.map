{"version":3,"file":"static/js/646.be07bc26.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/PhoneBook/Section/section.module.css?7c20","components/PhoneBook/Section/Section.jsx","webpack://react-homework-template/./src/components/PhoneBook/FormAddContact/formAddContact.module.css?ef25","redux/phones/phonesSelector.js","components/PhoneBook/FormAddContact/FormAddContact.jsx","webpack://react-homework-template/./src/components/PhoneBook/ContactList/contact.module.css?383d","components/PhoneBook/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/PhoneBook/Filter/filter.module.css?b555","components/PhoneBook/Filter/Filter.jsx","components/PhoneBook/phoneBook.module.css","components/PhoneBook/PhoneBook.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"section_section__EG+dL\",\"title\":\"section_title__gLFC8\"};","import styles from \"./section.module.css\"\nimport PropTypes from \"prop-types\"\n\nconst Section = ({ title, children }) => {\n    return (\n        <div className={styles.section}>\n            <h2 className={styles.title}>{title}</h2>\n            {children}\n        </div>\n    )\n}\n\nexport default Section;\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"formAddContact_wrapper__6VJ7y\",\"form\":\"formAddContact_form__ZakRw\",\"label\":\"formAddContact_label__ABdpW\",\"input\":\"formAddContact_input__nfQgW\",\"button\":\"formAddContact_button__C9-nZ\"};","export const getPhones = ({phones}) => {\n    return phones.items;\n};\n\nexport const getFilteredItems = ({ phones: { filter, items } }) => {\n  if (!filter) {\n    return items;\n  }\n  const newItems = items.filter((e) => {\n    const { name } = e;\n    return name.toLowerCase().includes(filter.toLowerCase());\n  });\n  return newItems;\n};\n\nexport const getFilterValue = ({ phones: { filter } }) => {\n  return filter;\n};","import { useState } from \"react\";\nimport styles from './formAddContact.module.css'\nimport PropTypes from \"prop-types\";\n\nimport { useDispatch } from \"react-redux/es/exports\";\nimport { useSelector } from \"react-redux\";\nimport { useCallback } from \"react\";\n\nimport { getPhones }  from \"../../../redux/phones/phonesSelector\";\n\nimport {\n    addPhone,\n  } from \"../../../redux/phones/phonesOperation\";\n\nconst FormAddContact = () => {\n    const phones = useSelector(getPhones);\n    const dispatch = useDispatch();\n\n    const onAddPhone = useCallback(\n        (obj) => {\n          const isInclude = phones.find(\n            ({ name }) => name.toLowerCase() === obj.name.toLowerCase()\n          );\n          if (!isInclude) {\n            dispatch(addPhone(obj));\n            return;\n          }\n          alert(`${isInclude.name} is already in contacts`);\n          return;\n        },\n        [phones, dispatch]\n      );\n\n    const [form, setForm] = useState({\n        name: \"\",\n        number: \"\"\n    });\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        setForm(prevForm => ({\n            ...prevForm,\n            [name]: value\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onAddPhone({ ...form });\n        setForm({\n            name: \"\",\n            number: \"\"\n        })\n    }\n    const { name, number } = form;\n    return (\n        <div className={styles.wrappper}>\n            <form className={styles.form} action=\"\" onSubmit={handleSubmit}>\n                <label className={styles.label} htmlFor=\"\">Name\n                    <input\n                        value={name}\n                        className={styles.input}\n                        onChange={handleChange}\n                        name=\"name\"\n                        type=\"text\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </label>\n\n                <label className={styles.label} htmlFor=\"\">\n                    Number\n                    <input\n                        value={number}\n                        className={styles.input}\n                        onChange={handleChange}\n                        name=\"number\"\n                        type=\"text\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                </label>\n\n                <div className={styles.group}>\n                    <button className={styles.button} type=\"submit\">Add contact</button>\n                </div>\n            </form>\n        </div>\n\n    )\n}\n\nFormAddContact.defaultProps = {\n    onSubmit: () => { },\n}\nFormAddContact.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}\n\nexport default FormAddContact;","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"contact_button__DWrSV\",\"item\":\"contact_item__mzFLo\"};","import styles from './contact.module.css';\nimport PropTypes from \"prop-types\";\n\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux/es/exports\";\n\nimport {\n    removePhones,\n  } from \"../../../redux/phones/phonesOperation\";\n\nconst ContactList = ({ phones }) => {\n    const dispatch = useDispatch();\n    \n      const onRemovePhone = useCallback(\n        (id) => {\n          dispatch(removePhones(id));\n        },\n        [dispatch]\n      );\n\n    const elem = phones.map(({ id, name, number }) => {\n        return (<li key={id} className={styles.item}>\n            {name}: {number}\n            <button className={styles.button} onClick={() => onRemovePhone(id)}>Delete</button>\n        </li >)\n    });\n\n    return (\n        <ul className={styles.list}>\n            {elem}\n        </ul>\n    )\n}\n\n\nContactList.defaultProps = {\n    phones: [],\n    removeContact: () => { },\n};\nContactList.propTypes = {\n    removeContact: PropTypes.func.isRequired,\n    phones: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        })\n    ),\n};\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"filter_input__3ohB7\"};","import { useDispatch } from \"react-redux/es/exports\";\nimport { useSelector } from \"react-redux\";\nimport { useCallback } from \"react\";\nimport { changeFilter } from \"../../../redux/phones/phonesSlice\";\nimport { getFilterValue }  from \"../../../redux/phones/phonesSelector\";\n\nimport styles from './filter.module.css';\nimport PropTypes from \"prop-types\";\n\nconst Filter = () => {\n    const filterValue = useSelector(getFilterValue);\n    const dispatch = useDispatch();\n\n    const changeFilterState = useCallback(\n        ({ target: { value } }) => {\n          dispatch(changeFilter(value.trim()));\n        },\n        [dispatch]\n      );\n    return (\n        <div>\n            <p>Find contacts by name</p>\n            <input className={styles.input} value={filterValue} onChange={changeFilterState} name=\"filter\" type=\"text\" />\n        </div>\n    )\n\n}\n\nFilter.defaultProps = {\n    onChange: () => { },\n}\nFilter.propTypes = {\n    onSubmit: PropTypes.func,\n}\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {};","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport Section from \"./Section\";\nimport FormAddContact from \"./FormAddContact\";\nimport ContactList from \"./ContactList\";\nimport Filter from \"./Filter\";\n\nimport { getFilteredItems }  from \"../../redux/phones/phonesSelector\";\n\nimport styles from './phoneBook.module.css'\nimport { fetchPhones } from \"redux/phones/phonesOperation\";\n\n\nconst PhoneBook = () => {\n    const filteredItems = useSelector(getFilteredItems);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchPhones());\n    }, [dispatch]);\n\n    return (\n        <div className={styles.phoneBook} >\n            <Section title=\"Phonebook\">\n                <FormAddContact />\n            </Section>\n\n            <Section title=\"Contacts\">\n                <Filter />\n                \n                <ContactList phones={filteredItems}/>\n            </Section>\n\n        </div>\n    )\n\n}\n\nexport default PhoneBook;","import PhoneBook from \"components/PhoneBook\";\n\nconst HomePage = () => {\n    return (\n       <PhoneBook />\n    )\n}\n\nexport default HomePage;"],"names":["title","children","className","styles","getPhones","phones","items","getFilteredItems","filter","e","name","toLowerCase","includes","getFilterValue","FormAddContact","useSelector","dispatch","useDispatch","onAddPhone","useCallback","obj","isInclude","find","alert","addPhone","useState","number","form","setForm","handleChange","target","value","prevForm","action","onSubmit","preventDefault","htmlFor","onChange","type","pattern","required","defaultProps","ContactList","onRemovePhone","id","removePhones","elem","map","onClick","removeContact","Filter","filterValue","changeFilterState","changeFilter","trim","filteredItems","useEffect","fetchPhones"],"sourceRoot":""}